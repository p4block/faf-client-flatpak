id: com.faforever.client
runtime: org.freedesktop.Platform
runtime-version: &runtime-version "23.08"
x-gl-version: &gl-version "1.4"
x-gl-versions: &gl-versions 23.08;23.08-extra;1.4
x-gl-merge-dirs: &gl-merge-dirs vulkan/icd.d;glvnd/egl_vendor.d;OpenCL/vendors;lib/dri;lib/d3d;vulkan/explicit_layer.d;vulkan/implicit_layer.d
sdk: org.freedesktop.Sdk
separate-locales: false

# Entrypoint to the container
command: faf-client

sdk-extensions:
  - org.freedesktop.Sdk.Compat.i386
  - org.freedesktop.Sdk.Extension.toolchain-i386
  - org.freedesktop.Sdk.Extension.openjdk21

finish-args:
  - --share=ipc
  - --socket=x11
  - --socket=wayland
  - --socket=pulseaudio
  - --device=all
  - --share=network
  - --allow=multiarch
  - --allow=devel
  - --talk-name=org.gnome.Mutter.DisplayConfig
  - --talk-name=org.freedesktop.ScreenSaver
  - --system-talk-name=org.freedesktop.UDisks2
  - --filesystem=home
  - --filesystem=/run/media
  # For Steam Deck HDR support
  - --env=LD_LIBRARY_PATH=/usr/lib/extensions/vulkan/gamescope/lib
  - --filesystem=xdg-run/gamescope-0:ro
  # For Debian
  - --filesystem=/media
  - --filesystem=~/.var/app/com.valvesoftware.Steam:ro
  - --filesystem=~/.config/MangoHud:ro
  - --env=PATH=/app/bin:/usr/bin:/app/utils/bin:/usr/lib/extensions/vulkan/MangoHud/bin/:/app/jre/bin/:/usr/lib/extensions/vulkan/gamescope/bin
  - --env=GST_PLUGIN_SYSTEM_PATH=/app/lib32/gstreamer-1.0:/app/lib/gstreamer-1.0:/usr/lib/i386-linux-gnu/gstreamer-1.0:/usr/lib/x86_64-linux-gnu/gstreamer-1.0
  # System tray icon
  - --talk-name=org.kde.StatusNotifierWatcher
  - --talk-name=org.freedesktop.Flatpak
  # Disable access to xdg-data/flatpak as it's causing a finish-args-unnecessary-xdg-data-access error.
  # Flatpak talk API might be enough but this might break features like Steam games detection.
  # - --filesystem=xdg-data/flatpak:ro
  # See: https://github.com/flathub/net.lutris.Lutris/pull/368#issuecomment-1751381312
  - --env=WEBKIT_DISABLE_DMABUF_RENDERER=1
  # --- umu ---
  # Install the umu runtime at $HOST_XDG_DATA_HOME
  # See: https://github.com/Open-Wine-Components/umu-launcher/pull/229
  - --filesystem=xdg-data/umu:create
  # Pressure Vessel
  # See: https://github.com/flathub/com.valvesoftware.Steam/commit/0538256facdb0837c33232bc65a9195a8a5bc750
  - --env=XDG_DATA_DIRS=/app/share:/usr/lib/extensions/vulkan/share:/usr/share:/usr/share/runtime/share:/run/host/user-share:/run/host/share:/usr/lib/pressure-vessel/overrides/share
  - --allow=per-app-dev-shm

add-extensions:
  org.freedesktop.Platform.Compat.i386:
    directory: lib/i386-linux-gnu
    version: *runtime-version

  org.freedesktop.Platform.Compat.i386.Debug:
    directory: lib/debug/lib/i386-linux-gnu
    version: *runtime-version
    no-autodownload: true

  org.freedesktop.Platform.GL32:
    directory: lib/i386-linux-gnu/GL
    version: *gl-version
    versions: *gl-versions
    subdirectories: true
    no-autodownload: false
    autodelete: false
    add-ld-path: lib
    merge-dirs: *gl-merge-dirs
    download-if: active-gl-driver
    enable-if: active-gl-driver
    autoprune-unless: active-gl-driver

  org.freedesktop.Platform.GL32.Debug:
    directory: lib/debug/lib/i386-linux-gnu/GL
    version: *gl-version
    versions: *gl-versions
    subdirectories: true
    no-autodownload: true
    merge-dirs: *gl-merge-dirs
    enable-if: active-gl-driver
    autoprune-unless: active-gl-driver

  org.freedesktop.Platform.VAAPI.Intel.i386:
    directory: lib/i386-linux-gnu/dri/intel-vaapi-driver
    version: *runtime-version
    versions: *runtime-version
    autodelete: false
    no-autodownload: true
    add-ld-path: lib
    download-if: have-intel-gpu
    autoprune-unless: have-intel-gpu

  com.valvesoftware.Steam.CompatibilityTool:
    subdirectories: true
    directory: share/steam/compatibilitytools.d
    version: stable
    versions: stable;beta;test
    no-autodownload: true
    autodelete: true

modules:
  - name: platform-bootstrap
    buildsystem: simple
    build-commands:
      - |
        set -e
        mkdir -p /app/bin
        mkdir -p /app/lib/i386-linux-gnu
        mkdir -p /app/lib/i386-linux-gnu/GL
        mkdir -p /app/lib/i386-linux-gnu/dri/intel-vaapi-driver
        mkdir -p /app/lib/debug/lib/i386-linux-gnu
        mkdir -p /app/lib/debug/lib/i386-linux-gnu/GL
        install -Dm644 -t /app/etc ld.so.conf
        mkdir -p /app/lib{,32}/ffmpeg
        mkdir -p /app/share/steam/compatibilitytools.d
        mkdir -p /app/utils /app/share/vulkan
        ln -srv /app/{utils/,}share/vulkan/explicit_layer.d
        ln -srv /app/{utils/,}share/vulkan/implicit_layer.d
        mkdir -p /app/links/lib
        ln -srv /app/lib /app/links/lib/x86_64-linux-gnu
        ln -srv /app/lib32 /app/links/lib/i386-linux-gnu
    sources:
      - type: inline
        dest-filename: ld.so.conf
        contents: |
          # We just make any GL32 extension have higher priority
          include /run/flatpak/ld.so.conf.d/app-*-org.freedesktop.Platform.GL32.*.conf
          /app/lib32
          /app/lib/i386-linux-gnu
          /lib64

  # These are needed for window management inside gamescope
  - name: python-flit-core # needed by idna
    buildsystem: simple
    build-commands:
      - pip3 install --no-index --no-build-isolation --prefix="${FLATPAK_DEST}" .
    cleanup: ["*"]
    sources:
      - type: archive
        url: https://files.pythonhosted.org/packages/c4/e6/c1ac50fe3eebb38a155155711e6e864e254ce4b6e17fe2429b4c4d5b9e80/flit_core-3.9.0.tar.gz
        sha256: 72ad266176c4a3fcfab5f2930d76896059851240570ce9a98733b658cb786eba

  # --- umu ---
  - name: umu-run
    buildsystem: simple
    build-commands:
      - |
        install umu-run /app/bin/umu-run
    sources:
      - type: archive
        url: https://github.com/Open-Wine-Components/umu-launcher/releases/download/1.2.6/umu-launcher-1.2.6-zipapp.tar
        sha256: ae0bfd9bd3de209d0b6590ffbffc395d79c501b10176e9e239e4a1f842b4ad3a
    modules:
      - name: winetricks
        buildsystem: simple
        build-commands:
          - install winetricks /app/bin/winetricks
        sources:
          - type: file
            url: https://raw.githubusercontent.com/Winetricks/winetricks/master/src/winetricks
            sha256: fd4f57a2b385c89ea896a3a8115003e935551e410128b2353dfebe2915d93d3f

  # -- java --
  - name: openjdk
    buildsystem: simple
    build-commands:
      - exec /usr/lib/sdk/openjdk21/install.sh

  # -- faf client --
  - name: faf-client
    sources:
      - type: archive
        url: "https://github.com/FAForever/downlords-faf-client/releases/download/v2025.2.1/faf_unix_2025_2_1.tar.gz"
        sha256: "fb634e94137bb61000c5163afc247a6e411a547c173435979417ea1b2cf92b2a"
        dest: client
      - type: script
        dest-filename: "faf-client.sh"
        commands:
          - export INSTALL4J_USER_DIRECTORY="${XDG_DATA_HOME}/"
          - export INSTALL4J_JAVA_HOME=/app/jre/
          - exec /app/client/faf-client "$@"
    buildsystem: simple
    build-commands:
      - install -Dm755 faf-client.sh /app/bin/faf-client
      # Copy the client itself to a path that looks good enough
      - mkdir /app/client
      - cp -a client/. /app/client
